syntax = "proto3";

option go_package = "tiny-tiktok/api_router/internal/proto/pb;proto";

package proto;

//protoc -I internal/proto/pb --go_out=./internal/proto --go_opt=paths=source_relative --go-grpc_out=./internal/proto --go-grpc_opt=paths=source_relative ./internal/proto/pb/*.proto

message FollowRequest {
    //@gotag json:"user_id" form:"user_id" uri:"user_id"
    int64 UserId = 1;
    //@gotag json:"to_user_id" form:"to_user_id" uri:"to_user_id"
    int64 ToUserId = 2;
    //@gotag json:"action_type" form:"action_type" uri:"action_type"
    int32 ActionType = 3;
}

message FollowResponse {
    //@gotag json:"status_code" form:"status_code" uri:"status_code"
    int64 StatusCode = 1;
    //@gotag json:"status_msg" form:"status_msg" uri:"status_msg"
    string StatusMsg = 2;
}

message FollowListRequest {
    //@gotag json:"user_id" form:"user_id" uri:"user_id"
    int64 UserId = 1;
}

message FollowListResponse{
    //@gotag json:"status_code" form:"status_code" uri:"status_code"
    int64 StatusCode = 1;
    //@gotag json:"status_msg" form:"status_msg" uri:"status_msg"
    string StatusMsg = 2;
    //@gotag json:"user_list" form:"user_list" uri:"user_list"
    repeated int64 UserId = 3;
}

message FollowInfoRequest {
    //@gotag json:"user_id" form:"user_id" uri:"user_id"
    int64 UserId = 1;
    //@gotag json:"to_user_id" form:"to_user_id" uri:"to_user_id"
    repeated int64 ToUserId = 2;
}

message FollowInfo {
    //@gotag json:"is_follow" form:"is_follow" uri:"is_follow"
    bool IsFollow = 1;
    //@gotag json:"follow_count" form:"follow_count" uri:"follow_count"
    int64 FollowCount = 2;
    //@gotag json:"follower_count" form:"follower_count" uri:"follower_count"
    int64 FollowerCount = 3;
    //@gotag json:"to_user_id" form:"to_user_id" uri:"to_user_id"
    int64 ToUserId = 4;
}

message FollowInfoResponse {
    //@gotag json:"status_code" form:"status_code" uri:"status_code"
    int32 StatusCode = 1;
    //@gotag json:"status_msg" form:"status_msg" uri:"status_msg"
    string StatusMsg = 2;
    //@gotag json:"follow_info" form:"follow_info" uri:"follow_info"
    repeated FollowInfo FollowInfo = 3;
}

message PostMessageRequest {
    //@gotag json:"user_id" form:"user_id" uri:"user_id"
    int64 UserId = 1;
    //@gotag json:"to_user_id" form:"to_user_id" uri:"to_user_id"
    int64 ToUserId = 2;
    //@gotag json:"action_type" form:"action_type" uri:"action_type"
    int32 ActionType = 3;
    //@gotag json:"content" form:"content" uri:"content"
    string Content = 4;
}

message PostMessageResponse {
    //@gotag json:"status_code" form:"status_code" uri:"status_code"
    int64 StatusCode = 1;
    //@gotag json:"status_msg" form:"status_msg" uri:"status_msg"
    string StatusMsg = 2;
}

message GetMessageRequest {
    //@gotag json:"user_id" form:"user_id" uri:"user_id"
    int64 UserId = 1;
    //@gotag json:"to_user_id" form:"to_user_id" uri:"to_user_id"
    int64 ToUserId = 2;
    //@gotag json:"pre_msg_time" form:"pre_msg_time" uri:"pre_msg_time"
    int64 preMsgTime = 3;
}

message Message {
    //@gotag json:"id" form:"id" uri:"id"
    int64 Id = 1;
    //@gotag json:"user_id" form:"user_id" uri:"user_id"
    int64 UserId = 2;
    //@gotag json:"to_user_id" form:"to_user_id" uri:"to_user_id"
    int64 ToUserId = 3;
    //@gotag json:"action_type" form:"action_type" uri:"action_type"
    string Content = 4;
    //@gotag json:"created_at" form:"created_at" uri:"created_at"
    int64 CreatedAt = 5;
}

message GetMessageResponse {
    //@gotag json:"status_code" form:"status_code" uri:"status_code"
    int64 StatusCode = 1;
    //@gotag json:"status_msg" form:"status_msg" uri:"status_msg"
    string StatusMsg = 2;
    //@gotag json:"message_list" form:"message_list" uri:"message_list"
    repeated Message Message = 3;
}

service SocialService {
    //关注,朋友和粉丝
    rpc FollowAction(FollowRequest) returns (FollowResponse){};
    rpc GetFollowList(FollowListRequest) returns (FollowListResponse){};
    rpc GetFollowerList(FollowListRequest) returns (FollowListResponse){};
    rpc GetFriendList(FollowListRequest) returns (FollowListResponse){};
    rpc GetFollowInfo(FollowInfoRequest) returns (FollowInfoResponse){};

    //消息
    rpc PostMessage(PostMessageRequest) returns (PostMessageResponse){};
    rpc GetMessage(GetMessageRequest) returns (GetMessageResponse){};
}